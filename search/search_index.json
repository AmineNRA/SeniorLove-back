{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"back/","title":"Conceptualisation du back","text":"<p>Pour le back il faut qu'il puisse envoyer les informations d'une page enti\u00e8rement depuis un appel \u00e0 l'api. Les routes se doit d'\u00eatre personnalis\u00e9 pour ne pas surcharger notre front avec des requetes et des jointures. Il y aura une indiquation sur chaque controlleur et qu'est ce qu'il r\u00e9cup\u00e8re dans notre db pour l'envoyer au front.</p>"},{"location":"back/#liste-pages-et-besoins","title":"Liste pages et besoins","text":"<p>Voici une liste des pages pr\u00e9sentes sur notre front et leur besoin en terme de donn\u00e9es:</p> <ul> <li>Page d'accueil : Le front nous envoie un email on doit v\u00e9rifier et r\u00e9pondre \u00e0 notre front avec un bool\u00e9an.</li> <li>Connexion : Loggin du user, v\u00e9rification du mdp.</li> <li>Inscription : Respect des r\u00e8gles input \u00e9tablis &gt; Cr\u00e9ation d'un user &gt; Cr\u00e9ation d'un profile &gt; R\u00e9pondre au front par le profile_id de l'utilisateur.</li> <li>Profile : Envoi d'un id de la part du front &gt; Recherche dans la db &gt; Envoi du profile qui correspond \u00e0 l'id.</li> <li>Event : Envoie de tous les evenements ( pagination de 6 avec scroll infini par exemple ).</li> <li>D\u00e9tail \u00e9v\u00e8nement : Envoie de l'id d'un evenement en particulier &gt; Recherche dans la db &gt; R\u00e9ponse des infos de l'evenement li\u00e9 \u00e0 l'id.</li> <li>Cr\u00e9er mes evenements : Envoi du front de toutes les informations du nouvel evenement &gt; V\u00e9rification si nous avons toutes les informations obligatoire &gt; R\u00e9ponse avec l'id de l'evenement cr\u00e9er.</li> <li>G\u00e9rer mes evenements : Envoi de l'id du profile de la part du front &gt; Recherche et envoi de tous les evenements qu'il a cr\u00e9er et auquel il s'est inscrit.</li> <li>Rencontre : Envoi de l'id du profile par le front &gt; Recherche et envoi de tous les profiles li\u00e9s \u00e0 ces pr\u00e9f\u00e9rences.</li> <li>Messagerie : Envoie de l'id du profile par le front &gt; Recherche et envoi de toutes les conversations auquel il a particip\u00e9. Ces conversations doit \u00eatre accompagn\u00e9 de la photo de profile de l'autre utilisateur et du dernier message en date dans la conversation.</li> <li>Conversation : Envoi de l'id de la conversation par le front &gt; R\u00e9cup\u00e9ration de tous les messages li\u00e9s \u00e0 la conversation du plus ancien au plus r\u00e9cent.</li> <li>Match : Envoie de l'id du profile par le front &gt; Recherche et envoi de tous les matchs avec le status accepted.</li> </ul> <p>CTA:</p> <p>Autre profile :</p> <ul> <li>Envoi d'un id profile et d'un id du profile lik\u00e9 &gt; Cr\u00e9ation du match &gt; Cr\u00e9ation des deux \u00e9l\u00e9ments dans la table de liaison match_profile avec le status like pour l'id de l'utilisateur qui a like et le status pending pour l'autre utilisateur &gt; R\u00e9ponse d'un bool\u00e9an au front pour dire que le profil a \u00e9t\u00e9 lik\u00e9.</li> <li>Envoi de l'id profile et d'un autre profile pour ouvrir une conversation &gt; Recheche des deux \u00e9l\u00e9ments qui ont l'un des deux id profile et le m\u00eame id_conversation &gt; Si aucun \u00e9l\u00e9ment envoi d'un bool\u00e9an false au front avec les informations ( pseudo, profile_image ) de l'autre id.</li> </ul> <p>Profile :</p> <ul> <li> <p>Envoi des informations modifi\u00e9s du profile &gt; Changement du profile avec les nouvelles informations et envoi du nouveau profile.</p> </li> <li> <p>D\u00e9tail \u00e9v\u00e8nement : Envoie de l'id du profile et de l'id de l'\u00e9venement &gt; V\u00e9rification si il n'existe pas et si c'est non cr\u00e9ation de la r\u00e9servation &gt; Envoi de la nouvelle liste de r\u00e9servation au front.</p> </li> <li> <p>Conversation : Envoie d'un nouveau message du front &gt; Si conversation_id = 0 cr\u00e9ation d'une conversation &gt; cr\u00e9ation des deux entit\u00e9s pour la table de liaison conversation_profile &gt; cr\u00e9ation du message avec l'id conversation qui est nouvellement cr\u00e9er &gt; Envoi de tous les messages li\u00e9s \u00e0 la conversation.</p> </li> </ul> <p>-Filtre Event ou Recontre : Envoi des pr\u00e9f\u00e9rences de recherche de l'utilisateur &gt; Modification du filtre de recherche dans la db &gt; R\u00e9ponse du nouveau tableau avec les filtres appliqu\u00e9s.</p> <p>Possibilit\u00e9 d'\u00e9volution:</p> <ul> <li>Ajout de la liste des personnes qui ont lik\u00e9 l'utilisateur de mani\u00e8re flou qui pourra \u00eatre un abonnement par exemple \u00e0 payer pour acc\u00e9der au profile int\u00e9r\u00e9ss\u00e9e par notre utilisateur.</li> <li>CTA sur l'\u00e9v\u00e8nement et proposition \u00e0 l'utilisateur de l'inscrire sur son agenda avec l'ouverture de google agenda et la cr\u00e9ation de l'\u00e9v\u00e8nement ( cela necessiterait une heure de fin de l'evenement).</li> <li>Filtre de distance entre les utilisateurs pour avoir plus de pr\u00e9f\u00e9rences.</li> </ul>"},{"location":"back/#endpoint-api","title":"Endpoint API","text":"<p>Profile:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/profile/:profile_id GET Envoi un profil back.seniorlove/profiles?preference=preference GET Filtre profil back.seniorlove/profile/ PATCH Modifie un profil back.seniorlove/profile/ DELETE Supprime un user <p>Conversation:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/conversations/ GET Cherche la liste de conversations du user back.seniorlove/conversation?profile_id=profile_id GET Cherche une conversation back.senior/love/conversation/:id DELETE Supprime une conversation <p>Message:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/message POST Cr\u00e9er un message back.seniorlove/message/:id PATCH Modifie un message back.seniorlove/message/:id DELETE Supprime un message <p>Event:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/events GET Envoi la liste de tous les evenements back.seniorlove/event/:id GET Envoi un evenement back.seniorlove/event POST Cr\u00e9er un \u00e9v\u00e8nement back.seniorlove/event/:id PATCH Modifie un evenement back.seniorlove/event/:id DELETE Supprime un evenement <p>Reservation:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/reservation/:event_id POST Cr\u00e9er une r\u00e9servation back.seniorlove/reservation/:event_id DELETE Supprime une r\u00e9servation <p>Match:</p> Requ\u00eate M\u00e9thode Explication back.seniorlove/matchs/ GET Trouve les match back.seniorlove/match?profile_id POST Cr\u00e9er un match back.seniorlove/match?match_id=match_id DELETE Supprime un match"},{"location":"back/#requete-et-response-de-chaque-route","title":"Requete et Response de chaque route","text":"<p>Profile:</p> <p>back.seniorlove/profile/:profile_id:</p> <p>request:</p> <pre><code>{\n    profile_id:\n}\n</code></pre> <p>response:</p> <pre><code>{\nid:\npseudo:\nprofile_image:\nage:\ncity:\ndescription:\ninterests:\nlike:\n}\n</code></pre> <p>back.seniorlove/profiles?preference=preference:</p> <p>request:</p> <pre><code>{\n    pseudo:\n    city:\n    gender:\n    age:\n}\n</code></pre> <p>(filtre donc chaque cl\u00e9 est optionnel)</p> <p>response:</p> <pre><code>{\nid:\npseudo:\nage:\nimage_profile:\n}\n</code></pre> <p>back.seniorlove/profile/:</p> <p>request:</p> <pre><code>{\n    pseudo:\nprofile_image:\nage:\ncity:\ndescription:\ninterests:\n}\n</code></pre> <p>(patch donc chaque info est optionnel)</p> <p>response:</p> <pre><code>{\nbool: true\n}\n</code></pre> <p>back.seniorlove/profile/:</p> <p>response:</p> <pre><code>{\n    bool:true\n}\n</code></pre> <p>Conversation:</p> <p>back.seniorlove/conversations/:</p> <p>response:</p> <pre><code>{\nid:\npseudo:\nprofile_image\nlastMessage\n}\n</code></pre> <p>back.seniorlove/conversation?profile_id=profile_id:</p> <p>request:</p> <pre><code>{\n    profile_id:\n}\n</code></pre> <p>response:</p> <pre><code>{\nid:\nMessages:[\n    {\n        content:\n        status:\n        created_at:\n        id_profile:\n        pseudo:\n        profile_image\n    }\n]\n}\n</code></pre> <p>back.senior/love/conversation/:id:</p> <p>request:</p> <pre><code>{\n    id:\n}\n</code></pre> <p>response:</p> <pre><code>{\nbool: true\n}\n</code></pre> <p>Message:</p> <p>back.seniorlove/message:</p> <p>request:</p> <pre><code>{\n    content:\n    conversation_id:\n}\n</code></pre> <p>response:</p> <pre><code>{\nstatus:\nid:\ncontent:\nprofile_id:\nconversation_id:\nupdatedAt:\ncreatedAt:\n}\n</code></pre> <p>back.seniorlove/message/:id:</p> <p>request:</p> <pre><code>{\n    content:\n}\n</code></pre> <p>response:</p> <pre><code>{\nbool:\n}\n</code></pre> <p>back.seniorlove/message/:id:</p> <p>request:</p> <pre><code>{\n    id:\n}\n</code></pre> <p>response:</p> <pre><code>{\nmessage:\n}\n</code></pre> <p>Event:</p> <p>back.seniorlove/events:</p> <p>request:</p> <pre><code>{\n    tag?:\n    date?:\n}\n</code></pre> <p>response:</p> <pre><code>[\n    {\nid:\ntitle:\ntag:\ndescription:\nthumbnail_image:\n}\n]\n</code></pre> <p>back.seniorlove/event/:id:</p> <p>request:</p> <pre><code>{\n    id:\n}\n</code></pre> <p>response:</p> <pre><code>[\n    {\nid:\ntitle:\ntag:\ndescription:\ndate:\ntime:\nstreet:\ncity:\npostal_code:\nthumbnail_image:\nfull_image:\nmax_participant:\nstatus:\ncreatedAt:\nupdatedAt:\nprofile_id:\nparticipants:[{}]\ncreator:{}\n}\n]\n</code></pre> <p>back.seniorlove/event:</p> <p>request:</p> <pre><code>{\n    title:\n    tag:\n    description:\n    date:\n    time:\n    street:\n    city:\n    postal_code:\n    full_image:\n    max_participant:\n}\n</code></pre> <p>response:</p> <pre><code>\n{\nid:\n}\n\n</code></pre> <p>back.seniorlove/event/:id:</p> <p>request:</p> <pre><code>{\n    title?:\n    tag?:\n    description?:\n    date?:\n    time?:\n    street?:\n    city?:\n    postal_code?:\n    full_image?:\n    max_participant?:\n}\n</code></pre> <p>response:</p> <pre><code>\n    {\nid:\ntitle:\ntag:\ndescription:\ndate:\ntime:\nstreet:\ncity:\npostal_code:\nthumbnail_image:\nfull_image:\nmax_participant:\nstatus:\ncreatedAt:\nupdatedAt:\nprofile_id:\nparticipants:[{}]\ncreator:{}\n}\n</code></pre> <p>back.seniorlove/event/:id:</p> <p>request:</p> <pre><code>{\n    id:\n}\n</code></pre> <p>response:</p> <pre><code>\n{\n    message:\n}\n</code></pre> <p>Reservation:</p> <p>back.seniorlove/reservation/:event_id</p> <p>request:</p> <pre><code>{\n}\n</code></pre> <p>response:</p> <pre><code>\n{\n    sucess:\n    message:\n}\n\n**back.seniorlove/reservation/:event_id**\n\nrequest:\n\n```json\n{\n}\n</code></pre> <p>response:</p> <pre><code>\n{\n    sucess:\n    message:\n}\n\n**Match:**\n\n**back.seniorlove/matchs**\n\nrequest:\n\n```json\n{\n}\n</code></pre> <p>response:</p> <pre><code>\n{\n    id:\n    status:\n    createdAt:\n    updatedAt:\n    matched_profiles:[{}]\n}\n\n**back.seniorlove/match?profile_id:**\n\nrequest:\n\n```json\n{\n    profile_id:\n}\n</code></pre> <p>response:</p> <pre><code>\n{\n    message:\n}\n\n**back.seniorlove/match?match_id=match_id:**\n\nrequest:\n\n```json\n{\n    match_id:\n}\n</code></pre> <p>response:</p> <p>```json</p> <p>{     message: }</p>"},{"location":"bdd/","title":"Conceptualisation base de donn\u00e9e","text":"<p>Liste entit\u00e9</p> picture profile event conversation message match interest mail url pseudo title created_at content status name position age tags created_at created_at gender description change_at deleted_at looking_for date deleted_at city time description street password city last_online postal_code created_at thumbnail_image disabled_at full_image deleted_at max_participants verified_at status <p>MCD</p> <p>Le MCD a \u00e9t\u00e9 cr\u00e9er sur mocodo online :</p> <pre><code>INTEREST: id, name\nAVOIR, 0N PROFILE, 0N INTEREST\nETRE, 0N PROFILE, NN CONVERSATION\nCONVERSATION: id, created_at, updated_at, deleted_at\nAPPARTIENT1, 11 MESSAGE, 1N CONVERSATION\nPICTURE: id, uel, position,\nAPPARTIENT, 11 PICTURE, 0N PROFILE\nPROFILE:id, mail, password, pseudo, age, gender, looking_for, city, description, interests, last_online, created_at, disabled_at, deleted_at, verified_at\nCREER, 11 PROFILE, 11 MESSAGE\nMESSAGE: id, content, created_at, change_at, deleted_at\nEVENT: id, title, tag, description, date, time, street, city, postal_code, thumbnail_image, full_image, max_participant, status\nCREER2, 0N PROFILE, 11 EVENT\nLIKE, 0N PROFILE, 1N MATCH\nMATCH: id,created_at, status\nRESERVER, 0N PROFILE, 1N EVENT\n</code></pre> <p>link</p> <p>MLD</p> picture profile event conversation conversation_profile message match match_profile reservation interest profile_interest id id id id #conversation_id id id #match_id id id id url pseudo title created_at #profile_id content status #profile_id #profile_id name #profile_id position age tags created_at created_at like #event_id #interest_id #profile_id gender description updated_at deleted_at looking_for date status city time #conversation_id description street #profile_id created_at city last_online postal_code disabled_at thumbnail_image deleted_at full_image verified_at max_participants #profile_id status #profile_id <p>Enum\u00e9ration des status des tables :</p> <ul> <li>Enum\u00e9ration de match : pending, accepted, rejected</li> <li>Enum\u00e9ration de event : scheduled, finished</li> <li>Enum\u00e9ration de message : unread, read, deleted</li> <li>Enum\u00e9ration de match_profile : pending, like</li> </ul> <p>La table reservation est la table de liaison entre user et event. La table profile_interest est la table de liaison entre profile et interest. La table match_profile d\u00e9fini si l'utilisateur a lik\u00e9 ou non et va influer le status du match. La table conversation_profile va inclure les id des participants \u00e0 la conversation ainsi que l'id de la conversation</p> <p>L'id primaire de la table de liaison va \u00eatre la concat\u00e9nation des deux ids pour etre unique. Les tables de liaison match_profile et conversation_profile n'auront pas besoin d'id primaire.</p>"}]}